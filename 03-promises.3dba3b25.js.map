{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UAgBtB,SAA0BC,GACxBA,EAAIC,iBACJ,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAIM,cAAcC,SAClD,IAAIC,EAAaC,OAAON,EAAMO,OAC1BC,EAAY,EACZC,EAAW,EACf,MAAMC,EAAaC,aAAY,KApBjC,IAAuBC,EAAUb,EAqBzBS,IAAcF,OAAOJ,EAAOK,QAIhCC,GAAa,EACbC,GAAY,GA1BOG,EA2BLH,EA3BeV,EA2BLM,EA1BnB,IAAIQ,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAI,C,SAAEF,E,MAAUb,IAEhBgB,EAAI,C,SAAEH,E,MAAUb,GAAQ,GAEzBA,EAAM,KAmBNoB,MAAK,EAACP,SAAEA,EAAQb,MAAEA,MACjBqB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBV,QAAiBb,MAAU,IAEnDwB,OAAM,EAACX,SAAEA,EAAQb,MAAEA,MAClBqB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoBZ,QAAeb,MAAU,IAEzEM,GAAcC,OAAOL,EAAKM,QAbxBkB,cAAcf,EAagB,GAC/B,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res({ position, delay })\n      } else {\n        rej({ position, delay })\n      }\n    }, delay)\n  })\n  \n}\n\nfunction handleFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  let delayInput = Number(delay.value);\n  let amountVal = 0;\n  let position = 0; \n  const intervalId = setInterval(() => {\n    if (amountVal === Number(amount.value)) {\n      clearInterval(intervalId);\n      return;\n    }\n    amountVal += 1;\n    position += 1;\n    createPromise(position, delayInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayInput += Number(step.value);\n  }, 0); \n}"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","delay","delay1","step","amount","currentTarget","elements","delayInput","Number","value","amountVal","position1","intervalId","setInterval","position","Promise","res","rej","setTimeout","Math","random","then","$parcel$interopDefault","Notify","success","catch","failure","clearInterval"],"version":3,"file":"03-promises.3dba3b25.js.map"}